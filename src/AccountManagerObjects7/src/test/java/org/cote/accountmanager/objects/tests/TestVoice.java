package org.cote.accountmanager.objects.tests;

import static org.junit.Assert.assertNotNull;

import org.cote.accountmanager.olio.llm.LLMServiceEnumType;
import org.cote.accountmanager.tools.EmbeddingUtil;
import org.cote.accountmanager.tools.VoiceRequest;
import org.cote.accountmanager.tools.VoiceResponse;
import org.cote.accountmanager.tools.VoiceUtil;
import org.cote.accountmanager.util.FileUtil;
import org.junit.Test;

public class TestVoice extends BaseTest {

	@Test
	public void TestVoice() {
		logger.info("Test voice synthesis...");
		String content = "Hello, this is a test of the voice synthesis system.";
		VoiceUtil eu = new VoiceUtil(LLMServiceEnumType.valueOf(testProperties.getProperty("test.voice.type").toUpperCase()), testProperties.getProperty("test.voice.tts.server"), testProperties.getProperty("test.voice.stt.server"), testProperties.getProperty("test.voice.authorizationToken"));
		
		
		logger.info("Testing Piper ...");
		VoiceRequest vreq = new VoiceRequest("piper", "en_GB-alba-medium", content);
		VoiceResponse voice = eu.getVoice(vreq);
		assertNotNull("Voice response is null", voice);
		FileUtil.emitFile("./test_piper_voice.mp3", voice.getAudio());
		
		logger.info("Testing Voice to Text ...");
		VoiceRequest stt = new VoiceRequest(voice.getAudio());
		VoiceResponse sttResponse = eu.getText(stt);
		assertNotNull("STT response is null", sttResponse);
		logger.info("Voice To Text - " + sttResponse.getText());
		
		/*
		logger.info("Testing Base64 Audio to Text ...");
		String base64Audio = "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";
		VoiceRequest sttBase64 = new VoiceRequest(base64Audio.getBytes());
		VoiceResponse sttBase64Response = eu.getText(sttBase64);
		assertNotNull("STT Base64 response is null", sttBase64Response);
		logger.info("Base64 Audio To Text - " + sttBase64Response.getText());
		*/
		/*
		logger.info("Testing Xtts ...");
		VoiceRequest vreq2 = new VoiceRequest("xtts", FileUtil.getFile("./media/English Female American.mp3"), content);
		VoiceResponse voice2 = eu.getVoice(vreq2);
		assertNotNull("Voice response is null", voice2);
		FileUtil.emitFile("./test_xtts_voice.mp3", voice2.getAudio());
		*/
		
	}
}

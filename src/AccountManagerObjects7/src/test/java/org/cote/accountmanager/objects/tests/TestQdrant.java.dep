package org.cote.accountmanager.objects.tests;

import static org.junit.Assert.assertNotNull;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import io.grpc.Grpc;
import io.grpc.ManagedChannel;
import io.grpc.TlsChannelCredentials;
import io.qdrant.client.QdrantClient;
import io.qdrant.client.QdrantGrpcClient;
import io.qdrant.client.grpc.Collections.CreateCollection;
import io.qdrant.client.grpc.Collections.Distance;
import io.qdrant.client.grpc.Collections.VectorParams;
import io.qdrant.client.grpc.Collections.VectorsConfig;

public class TestQdrant {
	public static final Logger logger = LogManager.getLogger(TestQdrant.class);
	
	protected QdrantClient client = null;
	@Before
	public void setup() {
		/*
		ManagedChannel channel = Grpc.newChannelBuilder(
				  "localhost:6334",
				  TlsChannelCredentials.newBuilder()
				    .trustManager(new File("ssl/ca.crt"))
				    .build())
				.build();

				QdrantClient client = new QdrantClient(
				  QdrantGrpcClient.newBuilder(channel)
				    .withApiKey("<apikey>")
				    .build());
		*/
		ManagedChannel channel = Grpc.newChannelBuilder(
				  "localhost:6334", 
				  TlsChannelCredentials.create())
				.build();

				client = new QdrantClient(
				  QdrantGrpcClient.newBuilder(channel, true)
				   // .withApiKey("<apikey>")
				    .build());
	}
	
	@After
	public void tearDown() throws Exception{
		if(client != null) {
			client.close();
		}
	}
	
	@Test
	public void TestClient() {
		logger.info("Testing Qdrant client");
		assertNotNull("Client is null", client);
	}
	
	/// from client unit test
	private static CreateCollection getCreateCollection(String collectionName) {
		return CreateCollection.newBuilder()
			.setCollectionName(collectionName)
			.setVectorsConfig(VectorsConfig.newBuilder()
				.setParams(VectorParams.newBuilder()
					.setDistance(Distance.Cosine)
					.setSize(4)
					.build())
				.build())
			.build();
	}
	
	@Test
	public void TestCreateCollection() {
		
		CreateCollection col = getCreateCollection("Test Collection");
		assertNotNull("Collection is null", col);

	}
}
